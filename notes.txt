Mutexes are used to provide synchronization between concurrent goroutines to prevent data races and ensure that only one goroutine can access a shared resource at a time. It stands for Mutual Exclusion.

A Goroutine is a lightweight thread managed by the Go runtime. go f(x, y, z) starts a new goroutine running f(x,y,z). The evaluation of f, x, y and z happens in the current goroutine and the execution happens in the new goroutine. Excense of Goroutine is to write concurrent programs easily and efficiently.

Channels provide a safe way for goroutines to communicate and coordinate.

Concurrency allows executing multiple tasks at a time.
