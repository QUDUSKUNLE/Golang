syntax = "proto3";
option go_package = "github.com/QUDUSKUNLE/microservices/shared/protogen/record";

import "google/api/annotations.proto";


service RecordService {
  // Get a record by ID
  rpc GetRecord(GetRecordRequest) returns (GetRecordResponse) {
    // @Summary Get a record by ID
    // @Description Retrieve a record using its unique record ID.
    // @Tags Record
    // @Accept json
    // @Produce json
    // @Param record_id path string true "Record ID"
    // @Success 200 {object} GetRecordResponse
    option (google.api.http) = {
      get: "/v1/records/{record_id}"
    };
  }
  // Search for records by user and scan title
  rpc SearchRecord(SearchRecordRequest) returns (SearchRecordResponse) {
    // @Summary Search for records
    // @Description Search for records by user ID and scan title.
    // @Tags Record
    // @Accept json
    // @Produce json
    // @Param user_id query string true "User ID"
    // @Param scan_title query string false "Scan Title"
    // @Param limit query int32 false "Limit"
    // @Param offset query int32 false "Offset"
    // @Success 200 {object} SearchRecordResponse
    option (google.api.http) = {
      get: "/v1/records/search"
    };
  }
  // Search for records by NIN
  rpc SearchByNin(SearchByNinRequest) returns (SearchRecordResponse) {
    // @Summary Search for records by NIN
    // @Description Search for records using NIN and scan title.
    // @Tags Record
    // @Accept json
    // @Produce json
    // @Param nin query string true "NIN"
    // @Param scan_title query string false "Scan Title"
    // @Success 200 {object} SearchRecordResponse
    option (google.api.http) = {
      get: "/v1/records/search/nin"
    };
  }
  // List all records
  rpc GetRecords(GetRecordsRequest) returns (GetRecordsResponse) {
    // @Summary List all records
    // @Description Retrieve a list of all records, optionally filtered by scan title or latest flag.
    // @Tags Record
    // @Accept json
    // @Produce json
    // @Param scan_title query string false "Scan Title"
    // @Param latest query string false "Latest"
    // @Success 200 {object} GetRecordsResponse
    option (google.api.http) = {
      get: "/v1/records"
    };
  }
  // Upload a scan record
  rpc ScanUpload(ScanUploadRequest) returns (ScanUploadResponse) {
    // @Summary Upload a scan record
    // @Description Upload a new scan record for a user.
    // @Tags Record
    // @Accept multipart/form-data
    // @Produce json
    // @Param body body ScanUploadRequest true "Scan upload request"
    // @Success 201 {object} ScanUploadResponse
    option (google.api.http) = {
      post: "/v1/records",
      body: "*"
    };
  }
}

message GetRecordsRequest {
  string scan_title = 1 [json_name = "scan_title"];
  string latest = 2 [json_name = "latest"];
}

message ScanUploadRequest {
  string user_id = 1 [json_name = "user_id"];
  string scan_title = 2 [json_name = "scan_title"];
  string file_name = 3 [json_name = "file_name"];
  bytes content = 4 [json_name = "content"];
}

message SearchRecordRequest {
  string user_id = 1 [json_name = "user_id"];
  string scan_title = 2 [json_name = "scan_title"];
  int32 limit = 3 [json_name = "limit"];
  int32 offset = 4 [json_name = "offset"];
}

message SearchByNinRequest {
  string nin = 1 [json_name = "nin"];
  string scan_title = 2 [json_name = "scan_title"];
}

message ScanUploadResponse {
  string record_id = 1 [json_name = "record_id"];
  string diagnostic_id = 2 [json_name = "diagnostic_id"];
  string user_id = 3 [json_name = "user_id"];
  string record = 4 [json_name = "record"];
  string scan_title = 5 [json_name = "scan_title"];
  string created_at = 6 [json_name = "created_at"];
  string updated_at = 7 [json_name = "updated_at"];
}

message Record {
  string record_id = 1 [json_name = "record_id"];
  string diagnostic_id = 2 [json_name = "diagnostic_id"];
  string user_id = 3 [json_name = "user_id"];
  string record = 4 [json_name = "record"];
  string scan_title = 5 [json_name = "scan_title"];
  string created_at = 6 [json_name = "created_at"];
  string updated_at = 7 [json_name = "updated_at"];
}

message GetRecordsResponse {
  repeated Record records = 1 [json_name = "records"];
}

message GetRecordRequest {
  string record_id = 1 [json_name = "record_id"];
  string scan_title = 2 [json_name = "scan_title"];
  string user_id = 3 [json_name = "user_id"];
}

message GetRecordResponse {
  string record_id = 1 [json_name = "record_id"];
  string user_id = 2 [json_name = "user_id"];
  string diagnostic_id = 3 [json_name = "diagnostic_id"];
  string record = 4 [json_name = "record"];
  string scan_title = 5 [json_name = "scan_title"];
  string created_at = 6 [json_name = "created_at"];
  string updated_at = 7 [json_name = "updated_at"];
}

message SearchRecordResponse {
  repeated Record records = 1 [json_name = "records"];
}
