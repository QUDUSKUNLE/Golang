version: '3.8'

networks:
  microservices-network:
    driver: bridge

volumes:
  kafka-data:

services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    environment:
      - AUTH_PORT=${AUTH_PORT}
      - AUTH_DB_URL=${AUTH_DB_URL}
      - AUTH_KAFKA_BROKER=${KAFKA_BROKER}
      - AUTH_KAFKA_TOPIC=${AUTH_KAFKA_TOPIC}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "./check_postgres.sh"]
      interval: 10s
      timeout: 5s
      retries: 5

  diagnostic-service:
    build:
      context: ./diagnostic-service
      dockerfile: Dockerfile
    ports:
      - "${DIAGNOSTIC_PORT}:${DIAGNOSTIC_PORT}"
    environment:
      - DIAGNOSTIC_PORT=${DIAGNOSTIC_PORT}
      - DIAGNOSTIC_DB_URL=${DIAGNOSTIC_DB_URL}
      - DIAGNOSTIC_KAFKA_BROKER=${KAFKA_BROKER}
      - DIAGNOSTIC_KAFKA_TOPIC=${DIAGNOSTIC_KAFKA_TOPIC}
      - DIAGNOSTIC_KAFKA_GROUP_ID=${DIAGNOSTIC_KAFKA_GROUP_ID}
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - microservices-network

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network
