version: '3.8'

services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - AUTH_PORT=8081
      - AUTH_DB_URL=postgres://user:password@db:5432/authdb
      - AUTH_KAFKA_BROKER=kafka:9092
      - AUTH_KAFKA_TOPIC=CreatedUser
      - JWT_SECRET_KEY=Boluwatife08971@
    depends_on:
      - db
      - kafka
  
  diagnostic-service:
    build:
      context: ./diagnostic-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - DIAGNOSTIC_PORT=8082
      - DIAGNOSTIC_DB_URL=postgres://user:password@db:5432/authdb
      - DIAGNOSTIC_KAFKA_BROKER=kafka:9092
      - DIAGNOSTIC_KAFKA_TOPIC=CreatedUser
      - DIAGNOSTIC_KAFKA_GROUP_ID=diagnostic-service
    depends_on:
      - db
      - kafka

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - USER_PORT=8083
      - USER_DB_URL=postgres://abumuhsinah:abumuhsinah@db:5432/golang?sslmode=disable
      - USER_KAFKA_BROKER=kafka:9092
      - USER_KAFKA_TOPIC=user-events
    depends_on:
      - db
      - kafka
  
  record-service:
    build:
      context: ./record-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - RECORD_PORT=8084
      - RECORD_DB_URL=postgres://abumuhsinah:abumuhsinah@db:5432/golang?sslmode=disable
      - RECORD_KAFKA_BROKER=kafka:9092
      - RECORD_KAFKA_TOPIC=record-events
      - CLOUDINARY_CLOUD_NAME=halalmeat
      - CLOUDINARY_API_SECRET=8bOHyOFG-8TceilnihDVgIOCIK4
      - CLOUDINARY_API_KEY=383994855158994
      - CLOUDINARY_ENV='CLOUDINARY_URL=cloudinary://383994855158994:8bOHyOFG-8TceilnihDVgIOCIK4@halalmeat'
      - CLOUDINARY_SECRUE=true
    depends_on:
      - db
      - kafka
  
  schedule-service:
    build:
      context: ./schedule-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - SCHEDULE_PORT=8085
      - SCHEDULE_DB_URL=postgres://abumuhsinah:abumuhsinah@db:5432/golang?sslmode=disable
      - SCHEDULE_KAFKA_BROKER=kafka:9092
      - SCHEDULE_KAFKA_TOPIC=schedule-events
      - SCHEDULE_KAFKA_GROUP_ID=scheule-service
    depends_on:
      - db
      - kafka

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "7557:7557"
    environment:
      - GATEWAY_PORT=7557
      - AuthService=http://auth-service:8081
      - DiagnosticService=http://diagnostic-service:8082
      - UserService=http://user-service:8083
      - RecordService=http://record-service:8084
      - ScheduleService:http://schedule-service:8085
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=notification-events
      - GATEWAY=0.0.0.0
    depends_on:
      - auth-service
      - diagnostic-service
      - user-service
      - record-service
      - schedule-service
      - kafka

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: abumuhsinah
      POSTGRES_PASSWORD: abumuhsinah
      POSTGRES_DB: golang
    ports:
      - "5432:5432"

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
