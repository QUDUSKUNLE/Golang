// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type UserEnum string

const (
	UserEnumUser         UserEnum = "user"
	UserEnumOrganization UserEnum = "organization"
	UserEnumCarrier      UserEnum = "carrier"
	UserEnumAdmin        UserEnum = "admin"
)

func (e *UserEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserEnum(s)
	case string:
		*e = UserEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for UserEnum: %T", src)
	}
	return nil
}

type NullUserEnum struct {
	UserEnum UserEnum
	Valid    bool // Valid is true if UserEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserEnum) Scan(value interface{}) error {
	if value == nil {
		ns.UserEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserEnum), nil
}

type User struct {
	ID        pgtype.UUID
	Email     pgtype.Text
	Nin       pgtype.Text
	Password  string
	UserType  NullUserEnum
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
}
