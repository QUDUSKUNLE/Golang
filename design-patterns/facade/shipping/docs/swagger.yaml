basePath: /v1
definitions:
  domain.Address:
    properties:
      city:
        maxLength: 50
        type: string
      country:
        allOf:
        - $ref: '#/definitions/domain.Country'
        maxLength: 50
      description:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        maxLength: 50
        type: string
      phone_no:
        maxLength: 50
        type: string
      province:
        type: string
      state:
        maxLength: 50
        type: string
      street_name:
        maxLength: 50
        type: string
      street_no:
        maxLength: 50
        type: string
      terminal_address_id:
        type: string
      zip:
        maxLength: 50
        type: string
    required:
    - city
    - country
    - email
    - first_name
    - last_name
    - phone_no
    - state
    - street_name
    - street_no
    - zip
    type: object
  domain.Country:
    enum:
    - NG
    - US
    - UK
    - UAE
    - NG
    type: string
    x-enum-varnames:
    - NG
    - US
    - UK
    - UAE
    - NIGERIA
  domain.Currency:
    enum:
    - AED
    - AUD
    - CAD
    - CNY
    - EUR
    - GBP
    - GHS
    - HKD
    - KES
    - NGN
    - TZS
    - UGX
    - USD
    - ZAR
    type: string
    x-enum-varnames:
    - AED
    - AUD
    - CAD
    - CNY
    - EUR
    - GBP
    - GHS
    - HKD
    - KES
    - NGN
    - TZS
    - UGX
    - USD
    - ZAR
  domain.ITEM_TYPE:
    enum:
    - document
    - parcel
    type: string
    x-enum-varnames:
    - DOCUMENT
    - PARCEL
  domain.LocationDto:
    properties:
      address:
        items:
          $ref: '#/definitions/domain.Address'
        type: array
      userID:
        type: string
    required:
    - address
    type: object
  domain.LogInDto:
    properties:
      email:
        maxLength: 100
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  domain.PACKAGE_TYPE:
    enum:
    - box
    - envelope
    - soft_packaging
    type: string
    x-enum-varnames:
    - BOX
    - ENVELOPE
    - SOFT_PACKAGING
  domain.PickUpDto:
    properties:
      carrier_id:
        type: string
      id:
        type: string
      pick_up_at:
        type: string
      shipping_id:
        type: string
      status:
        type: string
    required:
    - carrier_id
    - pick_up_at
    - shipping_id
    - status
    type: object
  domain.ProductType:
    enum:
    - animal
    - plant
    - appareal
    - book
    - cosmetics
    - electronics
    - watery
    - ammunition
    type: string
    x-enum-varnames:
    - Animal
    - Plant
    - Appareal
    - Book
    - Cosmetics
    - Electronics
    - Watery
    - Ammunition
  domain.ResetPasswordDto:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  domain.Response:
    properties:
      result: {}
      success:
        type: boolean
    type: object
  domain.ShippingDto:
    properties:
      carrier_id:
        type: string
      delivery_address:
        $ref: '#/definitions/domain.Address'
      description:
        maxLength: 1000
        minLength: 6
        type: string
      pick_up_address:
        $ref: '#/definitions/domain.Address'
      product_type:
        $ref: '#/definitions/domain.ProductType'
      userID:
        type: string
    required:
    - carrier_id
    - delivery_address
    - description
    - pick_up_address
    - product_type
    type: object
  domain.SingleTerminalPackagingDto:
    properties:
      height:
        type: number
      length:
        type: number
      name:
        type: string
      size_unit:
        type: string
      type:
        $ref: '#/definitions/domain.PACKAGE_TYPE'
      weight:
        type: number
      weight_unit:
        type: string
      width:
        type: number
    required:
    - height
    - length
    - name
    - size_unit
    - type
    - weight
    - weight_unit
    - width
    type: object
  domain.SingleTerminalParcelDto:
    properties:
      description:
        type: string
      items:
        items:
          $ref: '#/definitions/domain.TerminalParcelItemDto'
        type: array
      metadata:
        additionalProperties: true
        type: object
      packaging:
        type: string
      proof_of_payments:
        items:
          type: string
        type: array
      rec_docs:
        items:
          type: string
        type: array
      weight_unit:
        $ref: '#/definitions/domain.WEIGHT_UNIT'
    required:
    - description
    - items
    - packaging
    - proof_of_payments
    - rec_docs
    - weight_unit
    type: object
  domain.TerminalPackagingDto:
    properties:
      Packagings:
        items:
          $ref: '#/definitions/domain.SingleTerminalPackagingDto'
        type: array
    required:
    - Packagings
    type: object
  domain.TerminalParcelDto:
    properties:
      Parcels:
        items:
          $ref: '#/definitions/domain.SingleTerminalParcelDto'
        type: array
    required:
    - Parcels
    type: object
  domain.TerminalParcelItemDto:
    properties:
      currency:
        $ref: '#/definitions/domain.Currency'
      description:
        type: string
      hs_code:
        type: string
      name:
        type: string
      quantity:
        type: integer
      type:
        $ref: '#/definitions/domain.ITEM_TYPE'
      value:
        type: number
      weight:
        type: number
    required:
    - currency
    - description
    - name
    - quantity
    - type
    - value
    - weight
    type: object
  domain.UserDto:
    properties:
      confirm_password:
        maxLength: 20
        minLength: 6
        type: string
      email:
        maxLength: 100
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
      user_type:
        $ref: '#/definitions/domain.UserType'
    required:
    - confirm_password
    - email
    - password
    - user_type
    type: object
  domain.UserType:
    enum:
    - USER
    - CARRIER
    type: string
    x-enum-varnames:
    - USER
    - CARRIER
  domain.WEIGHT_UNIT:
    enum:
    - kg
    type: string
    x-enum-varnames:
    - KG
host: localhost:8080
info:
  contact: {}
  description: Cloud Shipping API
  title: Cloud Shipping API
  version: "1.0"
paths:
  /addresses:
    get:
      consumes:
      - application/json
      description: get addresses
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get addresses
      tags:
      - Address
    post:
      consumes:
      - application/json
      description: create addresses
      parameters:
      - description: Create addresses
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/domain.LocationDto'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Submit addresses
      tags:
      - Address
  /addresses/:addressID:
    get:
      consumes:
      - application/json
      description: get a address
      parameters:
      - description: Address ID
        in: path
        name: addressID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get a address
      tags:
      - Address
  /login:
    post:
      consumes:
      - application/json
      description: sign in a user
      parameters:
      - description: Sign in a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/domain.LogInDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Sign in a user
      tags:
      - User
  /packagings:
    post:
      consumes:
      - application/json
      description: create packagings
      parameters:
      - description: Create packagings
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/domain.TerminalPackagingDto'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Submit packagings
      tags:
      - Packaging
  /parcels:
    post:
      consumes:
      - application/json
      description: create parcels
      parameters:
      - description: Create parcels
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/domain.TerminalParcelDto'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Submit parcels
      tags:
      - Parcel
  /pickups:
    get:
      consumes:
      - application/json
      description: get carrier pickups
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get carrier pickups
      tags:
      - Carrier Pickup
    put:
      consumes:
      - application/json
      description: update a pickup
      parameters:
      - description: Update a pickup
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/domain.PickUpDto'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update a pickup
      tags:
      - Carrier Pickup
  /rates:
    get:
      consumes:
      - application/json
      description: get rates
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Currency
        enum:
        - NGN
        - USD
        in: query
        name: currency
        required: true
        type: string
      - description: Pickup Address ID
        in: query
        name: pickup_address_id
        required: true
        type: string
      - description: Delivery Address ID
        in: query
        name: delivery_address_id
        required: true
        type: string
      - description: Parcel ID
        in: query
        name: parcel_id
        required: true
        type: string
      - description: Cash On Delivery
        enum:
        - "false"
        - "true"
        in: query
        name: cash_on_delivery
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get rates
      tags:
      - Rates
  /register:
    post:
      consumes:
      - application/json
      description: register a new user
      parameters:
      - description: Register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/domain.UserDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Register a new user
      tags:
      - User
  /reset_password:
    post:
      consumes:
      - application/json
      description: Reset a user password
      parameters:
      - description: Reset password
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/domain.ResetPasswordDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Reset a user password
      tags:
      - User
  /shipments:
    get:
      consumes:
      - application/json
      description: get shipments
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get shipments
      tags:
      - Shipment
    post:
      consumes:
      - application/json
      description: create a shipment
      parameters:
      - description: Create a shipment
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/domain.ShippingDto'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Submit a shipment
      tags:
      - Shipment
swagger: "2.0"
